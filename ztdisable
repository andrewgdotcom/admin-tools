#!/bin/bash

# A QAD script to disable zerotier hosts via the zerotier API
# $1 is the ansible host or group name

set -eo pipefail
err_report() {
    echo "errexit on line $(caller)" >&2
}
trap err_report ERR

die() {
    echo $2 >&2
    exit $1
}

CURL_ARGS=-SsfL
if [[ ! $ZT_TOKEN_FILE ]]; then
    ZT_TOKEN_FILE=/root/.zerotier-token
fi
inventory="$1"

ZT_TOKEN=$(sudo cat $ZT_TOKEN_FILE)

if ! curl $CURL_ARGS -H "$ZT_TOKEN" https://my.zerotier.com/api/status|jq .online | grep -q true; then
    die 1 "Zerotier is offline. Aborting!"
fi

NETWORKS=$(curl $CURL_ARGS -H "$ZT_TOKEN" https://my.zerotier.com/api/network|jq .|awk '/nwid/ {print $2}'|tr -d '",')

hosts=$(ansible $inventory -m command -b -a \
    'perl -e "open(IN, q[-|], q[zerotier-cli status]); while(<IN>) { if(s/^.*200 info ([0-9a-fA-F]+) .*$/$1/){print qq[RESULT;{{ inventory_hostname }};$_]} }"')

for network in $NETWORKS; do
    for word in $hosts; do
        host=${word#RESULT;}
        if [[ $word == $host ]]; then
            continue
        fi
        hostname=${host%;*}
        hostid=${host#*;}
        [[ -z $( curl $CURL_ARGS \
            -H "$ZT_TOKEN" \
            https://my.zerotier.com/api/network/${network}/member/${hostid} ) ]] && continue
        echo "Deauthorizing $host_id ($host) from network $network_id" >&2
        curl -XPOST $CURL_ARGS \
            -H "$ZT_TOKEN" \
            -d '{"config": {"authorized": false}}' \
            https://my.zerotier.com/api/network/${network}/member/${hostid} \
            | jq . \
            || die 2 "Could not deauthorize"
    done
done
